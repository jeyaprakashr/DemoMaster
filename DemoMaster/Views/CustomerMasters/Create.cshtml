@model DemoMaster.Models.CustomerMaster

@{
    Layout = null;
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <!--Import Google Icon Font-->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <!--Import materialize.css-->
    <link type="text/css" rel="stylesheet" href="css/materialize.min.css" media="screen,projection" />
    <link type="text/css" rel="stylesheet" href="css/style_5.css" media="screen,projection" />
    <link type="text/css" rel="stylesheet" href="css/dashboard_style.css" media="screen,projection" />
    <!--Let browser know website is optimized for mobile-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
</head>
<body onLoad="buildHtmlTable()">
    <!--pre loader-->
    <div class="preloader-background">
        <div id="loading"></div>
    </div>
</body>

</html> 

<h2>Create</h2>

@*@using (Html.BeginForm("AddCustomer", "CustomerMasters", FormMethod.Post))*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Customer Registration</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerCode,"txtCustomerCode", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerCode, "", new { @class = "text-danger" })
            </div>
        </div>



        @*@Html.HiddenFor(model => model.CompanyCode, new { id = "CompanyCode", Value = @Model.CompanyCode})
        @Html.HiddenFor(model => model.CompanyCode)

        <input data-val="true"
               data-val-number="The field CompanyCode must be a string."
               data-val-required="The CompanyCode field is required."
               id="CompanyCode"
               name="CompanyCode"
               type="hidden"
               value="001" />*@


        <div class="form-group">
           @Html.LabelFor(model => model.CompanyCode,"School Name",htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.CompanyCode, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.CompanyCode, Model.GetCompany, "Please select", "txtCompanyCode")
                @Html.ValidationMessageFor(model => model.CompanyCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, "Customer Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, "txtCompanyName", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address1, "txtAddress1", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address2, "txtAddress2", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, "txtCity", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateCode, "State Name",htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.StateCode, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.StateCode, Model.GetStateCode, "Please select", "txtStateCode")
                @Html.ValidationMessageFor(model => model.StateCode, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.CountryCode,"Country Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("CountryCode", null, htmlAttributes:  new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })
                @Html.DropDownListFor(model => model.CountryCode, Model.GetCountryCode, "Please select")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZipCode, "txtZipCode", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, "txtPhone", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fax, "txtFax", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, "txtEmail", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.InActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.InActive, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InActive, "", new { @class = "text-danger" })*@
                <div class="form-group">
                    <div class="radio-inline">
                        @Html.RadioButton("InActive", "Y", true,new { id = "IsInActive" }) Yes
                    </div>
                    <div class="radio-inline">
                        @Html.RadioButton("InActive", "N",new { id = "IsActive" }) No
                    </div>
                </div>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.CreatedDate, new { htmlAttributes =  new { @class = "datepicker"  } })*@
                @Html.EditorFor(model => model.CreatedDate, "txtCreatedDate", new { htmlAttributes = new { @class = "form-control oso", @type = "date" } })
                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<button type="button" onclick='onFormSubmit()'>Submit</button>

<div>
    @Html.ActionLink("Back to List", "Index")
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
